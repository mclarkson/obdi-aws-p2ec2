{
  "name": "Obdi-aws-p2ec2",
  "tagline": "Creates AWS EC2 Instances from Full System Backups.",
  "body": "# obdi-aws-p2ec2\r\nCreates AWS EC2 Instances from Full System Backups.\r\n\r\nDependencies: [obdi-aws-ec2lib](https://github.com/mclarkson/obdi-aws-ec2lib)\r\n\r\nKnown Users: [obdi-rsyncbackup](https://github.com/mclarkson/obdi-rsyncbackup)\r\n\r\n# Todo\r\n\r\n\r\n# Screenshot\r\n\r\n![](images/obdi-aws-p2ec2-small.png?raw=true)\r\n\r\n# What is it?\r\n\r\nThis plugin writes files to a volume mounted into AWS management instance\r\nultimately creating a new AWS instance from those files.\r\n\r\nNo entry is made in the sidebar for this plugin since this plugin is accessed\r\nfrom other compatible plugins.\r\n\r\nFor example, when this plugin is installed, the obdi-rsyncbackup plugin will\r\nshow a 'Create Amazon EC2 Instance' button in the file viewer when it thinks it\r\nhas found a root filesystem. Pressing the button will take the user to this\r\nplugin and allow them to create an Amazon Virtual Machine.\r\n\r\n# Installation\r\n\r\n## Installing the plugin\r\n\r\n* Log into the admin interface, 'https://ObdiHost/manager/admin'.\r\n* In Plugins -> Manage Repositories add, 'https://github.com/mclarkson/obdi-awstools-repository.git'\r\n* In Plugins -> Add Plugin, choose 'aws-p2ec2' and Install.\r\n\r\n## Configuration\r\n\r\nSet the AWS_ACCESS_KEY_ID_1 json object in the environment, using the Admin interface.\r\n```\r\n{\r\n    \"Aws_access_key_id\":\"ALIENX2KD6OINVA510NQ\",\r\n    \"Aws_secret_access_key\":\"wHdlwoigU637fgnjAu+IRNVHfT-EXnIU5C2MbiQd\",\r\n    \"Aws_obdi_worker_instance_id\":\"i-e29eg362\",\r\n    \"Aws_obdi_worker_region\":\"us-east-1\",\r\n    \"Aws_obdi_worker_url\":\"https://1.2.3.4:4443/\",\r\n    \"Aws_obdi_worker_key\":\"secretkey\",\r\n    \"Aws_filter\":\"key-name=groupkey\",\r\n    \"Aws_keyname\":\"groupkey\",\r\n    \"Aws_securitygroups\":[\"groupkey\"],\r\n\r\n    \"Aws_dnsserver_ip\":\"10.17.3.163\",\r\n    \"Aws_dnsdomain\":\"karmalab.net\",\r\n    \"Aws_gateway\":\"10.17.0.1\",\r\n    \"Aws_obdi_worker_ip\":\"172.31.16.14\",\r\n    \"Aws_shell_user_name\":\"centos\",\r\n    \"Aws_shell_ssh_key_b64\":\"LS0tLSTXdURGxLU...1ySBQUklWQVRFIEtFWS0tLS0t\"\r\n}\r\n```\r\n\r\nThe following variables are used up until OS modifications by the Javascript/HTML code.\r\n\r\n*Aws_access_key_id*\r\n> AWS API access key ID\r\n\r\n*Aws_secret_access_key*\r\n> AWS API password\r\n\r\n*Aws_obdi_worker_instance_id*\r\n> The AWS instance that contains the Obdi worker.\r\n> This AWS instance will be used to copy, mount and modify the backup image.\r\n\r\n*Aws_obdi_worker_region*\r\n> The region the Obdi worker resides in.\r\n\r\n*Aws_obdi_worker_url*\r\n> The URL used to access the Obdi worker.\r\n\r\n*Aws_obdi_worker_key*\r\n> The password for the Obdi worker.\r\n\r\n*Aws_filter*\r\n> The global filter to apply, if any. For example, you might want to filter all\r\n> results by 'key-name=ourkeyname' or 'owner-id=25513944296'.\r\n\r\n*Aws_keyname*\r\n> The key name used when creating a new EC2 Instance.\r\n\r\n*Aws_securitygroups*\r\n> List of security group names (not IDs) that instances will belong to when\r\n> creating a new EC2 Instance.\r\n\r\nThe following variables are used by the Bash script when modifying the OS:\r\n\r\n*Aws_dnsserver_ip* and *Aws_dnsdomain*\r\n> Should both be set to avoid an error message. Affects the final '/etc/resolv.conf'.\r\n\r\n*Aws_gateway*\r\n> Affects the networking in '/etc/sysconfig/network-scripts/ifcfg-eth0'.\r\n\r\n*Aws_obdi_worker_ip*\r\n> The IP address of the AWS instance, Aws_obdi_worker_instance_id. This is the address\r\n> as seen from the Backup server.\r\n\r\n*Aws_shell_user_name*\r\n> User name to use to connect to Aws_obdi_worker_ip using ssh.\r\n\r\n*Aws_shell_ssh_key_b64*\r\n> The base64 encoded key file.\r\n\r\n# Dev\r\n\r\n![](images/instance-creation.png?raw=true)\r\n\r\n### get-not-so-secret-data\r\n\r\nGets Json Object Capability data for AWS_ACCESS_KEY_ID_1 for an environment.\r\nThis data will be stored in the Browser's DOM so Aws_secret_access_key and\r\nAws_obdi_worker_key have obfuscated values.\r\n\r\n```\r\n# Log in\r\n\r\n$ ipport=\"127.0.0.1:443\"\r\n\r\n$ guid=`curl -ks -d '{\"Login\":\"nomen.nescio\",\"Password\":\"password\"}' \\\r\n  https://$ipport/api/login | grep -o \"[a-z0-9][^\\\"]*\"`\r\n\r\n# Get [not-so-] secret AWS data from the Capability AWS_ACCESS_KEY_ID_1\r\n\r\n$ curl -k \"https://$ipport/api/nomen.nescio/$guid/aws-p2ec2/get-not-so-secret-data?env_id=1\"\r\n\r\n```\r\n\r\n### osedits-centos6\r\n\r\nTODO: Document parameter options.\r\n\r\nTODO: Document req params for capability object.\r\n\r\nEdits Centos 6 OS.\r\n\r\n```\r\n# Log in\r\n\r\n$ ipport=\"127.0.0.1:443\"\r\n\r\n$ guid=`curl -ks -d '{\"Login\":\"nomen.nescio\",\"Password\":\"password\"}' \\\r\n  https://$ipport/api/login | grep -o \"[a-z0-9][^\\\"]*\"`\r\n\r\n# Edit the OS\r\n\r\n$ curl -ks -X POST \"https://$ipport/api/nomen.nescio/$guid/aws-p2ec2/osedits?env_id=1&task_id=1&path=/nosnap/centosbox004&force=true&umountdir=true\"\r\n\r\n```\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}